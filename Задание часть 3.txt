

Ты являешься разработчиком одной из дочерних компаний Upisoft, которая разрабатывает компьютерные игры.
Компания разрабатывает игру по мотивам книги «Властелин колец» Дж. Р. Толкина. Вашей команде предстоит
разработать симулятор сражения армий «Последняя битва Средиземья».

Твоя задача реализовать симулятор сражения армий Мордора и Средиземья в соответствии со следующими правилами сражения.

    В сражении участвуют только 2 армии.
    В каждой армии есть пехота и кавалерия.
    До начала сражения армии должны быть сформированы в соответствии с установленными правилами:
        размер армий выбирается произвольным образом, но численность армий не должна отличаться друг от друга более чем на 20%;
        заполнение армий юнитами должно осуществляться произвольным образом (с помощью генератора псевдослучайных значений);
        При заполнении армии Средиземья необходимо произвольным образом определять наличие в ней волшебника:
        волшебник либо есть, и он один, либо его нет;
    Сражение состоит из трех последовательных фаз:
        первая фаза – сражение кавалерий;
        вторая фаза – сражение пехоты;
        третья фаза – сражение всех выживших после первых двух фаз.
    Фаза сражения считается завершенной, если хотя бы в одной из армий не осталось ни одного живого воина.
    Каждая фаза сражений состоит из последовательности дуэлей юнитов из разных армий.
    Каждая дуэль в первых двух фазах сражения происходит по следующим правилам:
        участники дуэли отбираются произвольным образом из перечня выживших юнитов в каждой армии (с учетом типов юнитов);
        произвольным образом определяется, кто из выбранной пары юнитов наносит первый удар;
        первый юнит наносит удар;
        если второй юнит не выжил после удара, дуэль завершается;
        если второй юнит выжил после удара, он наносит ответный удар, и дуэль на этом завершается независимо от того,
        выжил ли первый юнит.
    Третья фаза сражения происходит, только если после первых двух фаз в каждой армии (Мордора и Средиземья)
    остались выжившие юниты.
    Третья фаза сражения отличается от первых двух следующими правилами:
        при выборе участников дуэли не учитывается тип воинов, т. е. кавалерия может сражаться с пехотой;
        кавалерия имеет преимущество первого удара перед пехотой (т. е. в дуэли, в которой участвует кавалерист
        и пехотинец, первый удар всегда наносит кавалерист).
    После завершения сражения определяется армия, одержавшая победу в сражении.

Необходимо реализовать приведенную выше логику в соответствии со следующими требованиями к исходному коду.

    Необходимо создать публичный класс Battle.
    В классе Battle необходимо реализовать публичный статичный метод fight, не принимающий параметров
    и не возвращающий значение.
    Метод fight должен выполнять симуляцию сражения (от формирования армий до определения победителя).
    Метод fight должен быть перегружен версией с двумя аргументами (армия Мордора и армия Средиземья)
    и выполнять симуляцию сражения на основе переданных армий (пропустить шаг формирования армий).
    В процессе выполнения симуляции, необходимо выводить информацию на консоль в соответствии со следующими правилами:
        после завершения формирования армий, список воинов каждой армии должен выводиться в следующем формате:
        «Army of {Type} consists of:
        {Class.name1} {name1} has power {power1}
        {Class.name2} {name2} has power {power2}
        …
        {Class.nameN} {nameN} has power {powerN}»
        Где {Type} – это тип воинов в армии (MordorUnit или MiddleEarthUnit), {Class.nameN} {nameN} has power {powerN} –
        сведения об N-ном юните в армии;
        перед началом фазы должно выводиться сообщение «Phase {N}:» где N – номер раунда;
        в процессе сражения должна выводиться информация о каждом ударе в дуэли в следующем формате:
        «{Class.name1} {name1} has power {power1} strikes {Class.name2} {name2} has power {power2} and {CONCIQUENCES}»,
        где {CONCIQUENCES} – это результат удара, который может принимать значение «kills him» или «does not kill him»;
        после завершения каждой из первых двух фаз должна выводиться информация о победителе в формате:
        «Army of {Type} has won the {N} phase. The winners list:
        {Class.name1} {name1} has power {power1}
        {Class.name2} {name2} has power {power2}
        …
        {Class.nameM} {nameM} has power {powerM}»
        Где M – количество выживших юнитов в армии, участвовавшей в сражении;
        если третья фаза не потребовалась, информация о ней не выводится; если потребовалась, после нее не
        выводится информация о победителе фазы;
        После завершения сражения выводится информация о победителе в формате:
        «Army of {Type} has won the battle. The winners list:
        {Class.name1} {name1} has power {power1}
        {Class.name2} {name2} has power {power2}
        …
        {Class.nameM} {nameM} has power {powerM}».

В качестве ответа на задание приведите исходные коды пакета com.intellekta.generics.middleearth.

При проверке будет учитываться корректность использования обобщений, Wildcards а также эффективность реализации алгоритмов.
